// 1.1) Объявление функции - это техника, которая позволяет сообщить компилятору о наличии функции и её аргументов
// 1.2) Определение функции - это описание действий, которые выполняет функция, то есть какие действия надо выполнить чтобы получить результат


// 2.1) Способы передачи параметров
// По значению - создается копия
void Value(int x) {
    x = 10;  // меняется только копия
}

// По ссылке - работает с оригиналом
void Reference(int& x) {
    x = 20;  // меняется оригинальная переменная
}

// По константной ссылке - только чтение
void Const(const int& x) {
    // x = 30;  // ошибка - нельзя изменить
    std::cout << x;  // можно только читать
}



// 2.2) Правила перегрузки
// Разное количество параметров
void p(int a) {}
void p(int a, int b) {}

// Разные типы параметров  
void p(double a) {}
void p(std::string a) {}

// Разный порядок параметров
void p(int a, double b) {}
void p(double a, int b) {}

// 5.2) Способы защиты от повторного включения 
// 1. Include guard
// 2. Pragma once
// 3. Комбинирование этих способов


// 6.1) При использовании например более позних библиотек для использования например cout, программа может выдать ошибку потому что не сможет распознать к какой именно библиотеке относится cout
// Конфликт имён - при введении собственной функции 
// 7.1) Ошибки линковки - это проблемы с соединением различных модулей кода
// Неопределённая ссылка, отсутствует определение функции, вызов необъявленной функции
